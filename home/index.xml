<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homes on wizzy - cli for Grafana</title>
    <link>https://utkarshcmu.github.io/wizzy-site/home/index.xml</link>
    <description>Recent content in Homes on wizzy - cli for Grafana</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://utkarshcmu.github.io/wizzy-site/home/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Home</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/</guid>
      <description>

&lt;h1 id=&#34;wizzy&#34;&gt;wizzy&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;wizzy&lt;/code&gt; is a rich user-friendly command line tool written in node.js to manage Grafana entities. It can save you hundreds of clicks in a day when editing and managing your Grafana dashboards, rows, datasources, etc. It can also be used to store the entities like dashboards, rows, panels and even template variables in a Github repo making Grafana entities version controlled.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use cases</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/use-cases/</guid>
      <description>&lt;p&gt;If you would like to do the following in Grafana, then &lt;code&gt;wizzy&lt;/code&gt; is a great command line tools which can accomplish the following tasks with ease:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Storing Grafana dashboards, rows, panels, datasources, orgs, template variables, etc. in Git.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Copy, move or edit rows and panels either within a dashboard or between two dashboards.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Uploading and downloading Grafana dashboards from and to AWS S3 respectively.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Generating 8 second GIFs for any Grafana dashboard with last 24 hours of data.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/getting-started/</guid>
      <description>

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Install nodejs by downloading it from nodejs.org. (&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt;). After installing nodejs, run following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ node -v
$ npm -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: Please make sure node version is above 5.10.1.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;There are 3 different ways you can install wizzy:&lt;/p&gt;

&lt;p&gt;1 - Use docker image &lt;a href=&#34;https://github.com/utkarshcmu/wizzy-docker&#34;&gt;wizzy-docker&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull utkarshcmu/wizzy
	- pulls latest docker image
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 - Using npm (Stable release):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install -g wizzy
	- Use sudo if needed or permission was denied
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3 - Using Github (from source):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/utkarshcmu/wizzy.git
$ cd wizzy
$ npm install
$ npm link
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;initialization&#34;&gt;Initialization&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Check wizzy version&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy version
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a Github repo for storing dashboards&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir grafana-dash
$ cd grafana-dash
$ git init
	- optional step to store dashboards in a github repo
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize wizzy&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set Grafana properties in wizzy&amp;rsquo;s config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy set grafana url GRAFANA_URL
	- a required setting to connect to Grafana installation
$ wizzy set grafana username USERNAME
	- if anonymous access to Grafana is disabled.
$ wizzy set grafana password PASSWORD
	- if anonymous access to Grafana is disabled.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: Add &lt;code&gt;conf&lt;/code&gt; directory to .gitignore to avoid checking your credentials into git repo.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Test wizzy setup&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy status
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You are ready to use wizzy. Check out tutorials!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/concepts/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;local dashboard&lt;/em&gt; - a json dashboard file under dashboards directory on local disk&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;remote dashboard&lt;/em&gt; - a dashboard currently live in Grafana&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/commands/</guid>
      <description>&lt;p&gt;Broadly there are two types of commands in wizzy. Remote commands, which interacts with external sources like Grafana, S3, etc, and local commands, which operate on local json entities like dashboards, datasources, etc.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>