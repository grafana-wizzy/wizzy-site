<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wizzy - cli for Grafana</title>
    <link>https://utkarshcmu.github.io/wizzy-site/index.xml</link>
    <description>Recent content on wizzy - cli for Grafana</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://utkarshcmu.github.io/wizzy-site/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>External Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/external-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/external-commands/</guid>
      <description>

&lt;h1 id=&#34;external-commands&#34;&gt;External Commands&lt;/h1&gt;

&lt;p&gt;These commands interacts with external platforms such as Grafana.net, S3, etc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>General Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/general-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/general-commands/</guid>
      <description>

&lt;h3 id=&#34;help-commands&#34;&gt;Help Commands&lt;/h3&gt;

&lt;p&gt;Help commands lets you explore wizzy&amp;rsquo;s info, health, configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy conf
	- shows wizzy configuration

$ wizzy init
	- only to be used while setting up wizzy for the first time

$ wizzy status

$ wizzy help

$ wizzy version
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configuration-commands&#34;&gt;Configuration commands&lt;/h3&gt;

&lt;p&gt;wizzy properties can be set in wizzy by running following commands, if you have not set already:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy set grafana url GRAFANA_URL

$ wizzy set grafana username USERNAME

$ wizzy set grafana password PASSWORD

$ wizzy set grafana debug_api true
	- an optional setting to debug Grafana API calls, `false` by default

$ wizzy set context dashboard DASHBOARD_SLUG

$ wizzy set clip render_height 600

$ wizzy set clip render_width 600

$ wizzy set clip render_timeout 10

$ wizzy set clip canvas_width 800

$ wizzy set clip canvas_height 600

$ wizzy set clip delay 500
	- sets delay between each snapshot, lower delay means short video

$ wizzy set s3 bucket_name

$ wizzy set s3 path
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Local Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/local-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/local-commands/</guid>
      <description>

&lt;h1 id=&#34;local-commands&#34;&gt;Local commands&lt;/h1&gt;

&lt;p&gt;These commands operates on local json file based dashboards and support Dashboard Context.&lt;/p&gt;

&lt;h3 id=&#34;dashboard-context&#34;&gt;Dashboard context&lt;/h3&gt;

&lt;p&gt;A user can set the dashboard context in wizzy by the following command so that the wizzy cli is aware about the local dashboard on which it should operate. This is an optional setting for some commands and mandatory for other commands, which makes wizzy cli more intuitive and user-friendly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy set context dashboard DASHBOARD_SLUG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: Once context is set, wizzy will use this dashboard as default if no dashboard is supplied. It will be mentioned in the documentation where setting dashboard context is required.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Remote Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/remote-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/remote-commands/</guid>
      <description>

&lt;h1 id=&#34;remote-commands&#34;&gt;Remote Commands&lt;/h1&gt;

&lt;p&gt;These commands operates directly on your Grafana installation via API, so please use them carefully. Commands for importing, listing, exporting and deleting dashboards, orgs, datasources are part of this set of commands.These commands are usually used when you have completed local changes and now the changes are ready to be pushed to your Grafana installation.&lt;/p&gt;

&lt;p&gt;Dashboard Context(which is explained in local commands section) is not supported by these commands currently.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use cases</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/use-cases/</guid>
      <description>&lt;p&gt;There can be a lot of use cases where wizzy can be used and some of them which I can think of right now are listed below. If you would like to do any of the following tasks in Grafana, then &lt;code&gt;wizzy&lt;/code&gt; can help you accomplish them with its easy command line interface:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Copy, move Grafana dashboards from one installation of Grafana to another. For example, from your dev installtion to prod.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Store Grafana dashboards, rows, panels, datasources, orgs and even template variables, etc. in Git.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Copy, move, remove, edit rows and panels either within a dashboard or between two dashboards.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Upload/Store/Download Grafana dashboards from and to AWS S3 respectively.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Search/Download Grafana.net community dashboards in a single command.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Generate 8 second GIFs for any Grafana dashboard with last 24 hours of data for your presentations.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Feel free to add more use cases of &lt;code&gt;wizzy&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AWS S3 Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/external-commands/s3-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/external-commands/s3-commands/</guid>
      <description>&lt;p&gt;To use wizzy with AWS S3, there are couple of steps to follow.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Have your aws config file under ~/.aws/config (standard aws config location).&lt;/li&gt;
&lt;li&gt;Set Bucket name and path (optional) using &lt;code&gt;wizzy set s3 bucket_name&lt;/code&gt; and &lt;code&gt;wizzy set s3 path&lt;/code&gt; commands.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And then you can use the following commands to upload and download your dashboards to and from S3.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy upload to-s3 dashboards
  - uploads all dashboards to S3

$ wizzy download from-s3 dashboards
  - downloads all dashboards from S3 to local

$ wizzy upload to-s3 dashboard DASHBOARD_SLUG
  - uploads a single dashboard to S3

$ wizzy download from-s3 dashboard DASHBOARD_SLUG
  - downloads a single dashboard from S3
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Dashboard Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/local-commands/dashboard-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/local-commands/dashboard-commands/</guid>
      <description>&lt;p&gt;These commands impacts the dashboard wide changes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy summarize dashboard DASHBOARD_SLUG
	- prints summary of a local dashboard

$ wizzy change panels datasource OLD_DATASOURCE NEW_DATASOURCE
	- changes OLD_DATASOURCE to NEW_DATASOURCE for all panels on a dashboard
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Dashboard Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/remote-commands/dashboard-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/remote-commands/dashboard-commands/</guid>
      <description>&lt;p&gt;Following commands are used to interact with Grafana dashboards.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;list&lt;/strong&gt; - Prints the list of dashboards from Grafana in a tabular format&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy list dashboards
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;show&lt;/strong&gt; - Prints remote dashboard json from Grafana&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy show dashboard DASHBOARD_SLUG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy show dashboard cpu-stats
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;import&lt;/strong&gt; - Imports remote dashboards json objects into your local dashboards directory. This command creates a new file if the dashboard does not exist or replaces an existing file if the dashboard exists locally.
For importing all dashboards from Grafana, use following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy import dashboards
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to import only one remote dashboard, please use the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy import dashboard DASHBOARD_SLUG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy import dashboard cpu-stats
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;export&lt;/strong&gt; - Exports local dashboards to be saved as a remote dashboard and go live in your Grafana installation. This will replace an existing dashboard or creates a new dashboard in Grafana. Please use this carefully.
For exporting all local dashboards to Grafana, use the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy export dashboards
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to export only one local dashboard, please use the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy export dashboard DASHBOARD_SLUG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy export dashboard cpu-stats
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;delete&lt;/strong&gt; - Deletes a remote dashboard from your Grafana installation. Use carefully.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy delete dashboard DASHBOARD_SLUG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy delete dashboard cpu-stats
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;clip&lt;/strong&gt; - Makes a clip (a gif image) of dashboard&amp;rsquo;s last 24 hours of data. Please set all 6 clip configuration properties otherwise this command will not work. To know how to set properties, please look at &lt;a href=&#34;https://utkarshcmu.github.io/wizzy-site/wizzy-site/general-commands/&#34;&gt;General commands&lt;/a&gt;. Generated clip will be under clips directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy clip dashboard DASHBOARD_SLUG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy clip dashboard cpu-stats
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Please delete the &lt;code&gt;temp&lt;/code&gt; directory created locally as it contains intermediate images to create the clip.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Datasource Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/remote-commands/datasource-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/remote-commands/datasource-commands/</guid>
      <description>&lt;pre&gt;&lt;code&gt;$ wizzy show datasources
	- shows you all the datasources in JSON

$ wizzy import datasources
	- imports all datasources in JSON format and store under datasources directory

$ wizzy export datasources
	- export all local datasources to Grafana

$ wizzy import datasource DATASOURCE_NAME
	- imports a datasource in JSON format and store under datasources directory

$ wizzy show datasource DATASOURCE_NAME
	- shows you a datasource in JSON

$ wizzy export datasource DATASOURCE_NAME
	- exports local datasource JSON object to replace the one in Grafana
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Grafana.net Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/external-commands/gnet-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/external-commands/gnet-commands/</guid>
      <description>&lt;p&gt;wizzy can interact now with Grafana.net. It can list and download dashboards from Grafana.net. Commands available for interaction with Grafana.net are listed below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy list gnet dashboards &amp;lt;FILTER&amp;gt;
  - lists all the dashboards and if filter is present then filters out the dashboards according to it.
  - for example: &#39;wizzy list gnet dashboards ds=graphite&#39; lists all dashboards with datasource = graphite.
  
$ wizzy download from-gnet dashboard DASHBOARD_ID REVISION_ID
  - Download a dashboard json from Grafana.net and stores under dashboards directory.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Org Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/remote-commands/org-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/remote-commands/org-commands/</guid>
      <description>&lt;pre&gt;&lt;code&gt;$ wizzy import orgs
	- imports all orgs in JSON format and stores under orgs directory

$ wizzy import org ORG_ID
	- imports an org with ORG_ID

$ wizzy create org ORG_NAME
	- creates an org in Grafana

$ wizzy show orgs
	- shows all orgs from Grafana

$ wizzy show org ORG_ID
	- shows an org from Grafana

$ wizzy delete org ORG_ID
	- deletes an org in Grafana

$ wizzy export org ORG_ID
	- exports an org from local JSON to replace the one in Grafana
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/getting-started/</guid>
      <description>

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Install nodejs by downloading it from nodejs.org. (&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt;). After installing nodejs, run following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ node -v
$ npm -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note: Please make sure node version is above 5.10.1.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;There are 3 different ways you can install wizzy:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Using docker. Pull the latest docker image &lt;a href=&#34;https://github.com/utkarshcmu/wizzy-docker&#34;&gt;wizzy-docker&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull utkarshcmu/wizzy
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Using npm (Stable release):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install -g wizzy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Node: - Use sudo if needed or permission was denied&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Using Github (from source):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/utkarshcmu/wizzy.git
$ cd wizzy
$ npm install
$ npm link
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;initialization&#34;&gt;Initialization&lt;/h2&gt;

&lt;p&gt;Once &lt;code&gt;wizzy&lt;/code&gt; is installed, it needs to be initialized to serve you with the awesome commands it has. These are the most important steps to setup wizzy.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Check wizzy version&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy version
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a local directory for storing Grafana entities.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir DIRECTORY_NAME
$ cd DIRECTORY_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir grafana-entities
$ cd grafana-entities
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize git repo in your grafana-entities directory. Its an optional step and should be used if you need version control for your Grafana entities such as dashboards, datasources, etc.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize wizzy&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Connect to Grafana by setting Grafana properties in wizzy&amp;rsquo;s config. Please set your Grafana username and password if anonymous access to Grafana is disabled.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy set grafana url GRAFANA_URL
$ wizzy set grafana username YOUR_USERNAME
$ wizzy set grafana password YOUR_PASSWORD
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy set grafana url http://localhost:3000
$ wizzy set grafana username admin
$ wizzy set grafana password admin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note: Add &lt;code&gt;conf&lt;/code&gt; directory to .gitignore to avoid checking in your credentials into git repo.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Test wizzy setup&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wizzy status
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You are ready to use wizzy. Check out &lt;a href=&#34;https://utkarshcmu.github.io/wizzy-site/wizzy-site/examples&#34;&gt;examples&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Row Commands</title>
      <link>https://utkarshcmu.github.io/wizzy-site/local-commands/row-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/local-commands/row-commands/</guid>
      <description>&lt;pre&gt;&lt;code&gt;$ wizzy copy row SOURCE_ROW_NUMBER DESTINATION_ROW_NUMBER
	- copies a row from one position to another on the same dashboard

$ wizzy copy row SOURCE_ROW_NUMBER DESTINATION_DASHBOARD_SLUG.ROW_NUMBER
	- copies a row from one dashboard to another dashboard

$ wizzy move row SOURCE_ROW_NUMBER DESTINATION_ROW_NUMBER
	- moves a row from one position to another on the same dashboard

$ wizzy move row SOURCE_ROW_NUMBER DESTINATION_DASHBOARD_SLUG.ROW_NUMBER
	- moves a row from one dashboard to another dashboard

$ wizzy remove row SOURCE_ROW_NUMBER
	- removes a row from the current dashboard

$ wizzy extract row SOURCE_ROW_NUMBER
  - removes a row from the current dashboard and saves it under rows directory

$ wizzy insert row ROW_NAME
  - inserts a row from the rows directory to context dashboard

$ wizzy insert row ROW_NAME DESTINATION_SLUG
	- inserts a row from the rows directory to a dashboard
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Store Dashboards in Github</title>
      <link>https://utkarshcmu.github.io/wizzy-site/examples/store-dashboards-in-github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/examples/store-dashboards-in-github/</guid>
      <description>

&lt;p&gt;Learn how to store dashboards in Github&lt;/p&gt;

&lt;h1 id=&#34;work-in-progress&#34;&gt;work in progress &amp;hellip;.&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://utkarshcmu.github.io/wizzy-site/home/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://utkarshcmu.github.io/wizzy-site/home/concepts/</guid>
      <description>&lt;p&gt;There are basically 2 copies of your Grafana entities. One running in Grafana live currently and second stored in your local directory.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For example:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;local dashboard&lt;/em&gt; - a dashboard json file under dashboards directory on local disk&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;remote dashboard&lt;/em&gt; - a dashboard currently live in Grafana&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;local panel&lt;/em&gt; - a panel json file under temp-vars directory on local disk&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;remote panel&lt;/em&gt; - a panel currently live one a dashboard in Grafana&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Commands are available to interact with both copies of your Grafana entities.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>